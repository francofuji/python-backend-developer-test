# Generated by Django 4.1.2 on 2022-10-31 05:01
from email.policy import default
import json
import datetime
from django.db import migrations

def fill_database(apps, schema_editor):
    """
    Read songs.json file and fill database
    """
    Track = apps.get_model('top_songs', 'Track')
    Artist = apps.get_model('top_songs', 'Artist')
    Genre = apps.get_model('top_songs', 'Genre')
    
    f = open('./songs.json')
    data = json.load(f)
    for json_track in data['feed']['results']:
        artist, created = Artist.objects.get_or_create(id=json_track['artistId'])
        if created:
           artist.id = int(json_track['artistId']) 
           artist.artistName = json_track['artistName'] 
           artist.artistUrl = json_track['artistUrl']
           artist.save()
        track, created = Track.objects.get_or_create(id=json_track['id'], defaults={
            'releaseDate': datetime.datetime.strptime(json_track['releaseDate'], '%Y-%m-%d'),
            'artist': artist,
            'id': int(json_track['id']),
            'name': json_track['name'],
            'artworkUrl100': json_track['artworkUrl100'],
            'url': json_track['url'],
        })
        if created:
            if 'contentAdvisoryRating' in json_track:
                track.contentAdvisoryRating = json_track['contentAdvisoryRating']
            track.save()
        for json_genre in json_track['genres']:
            genre, created = Genre.objects.get_or_create(id=json_genre['genreId'])
            if created:
                genre.name = json_genre['name']
                genre.url = json_genre['url']
                genre.save()
            track.genres.add(genre)

    
    f.close()

def reverse(apps, schema_editor):
    """
    Clear database
    """
    Track = apps.get_model('top_songs', 'Track')
    Artist = apps.get_model('top_songs', 'Artist')
    Genre = apps.get_model('top_songs', 'Genre')
    Track.objects.all().delete()
    Artist.objects.all().delete()
    Genre.objects.all().delete()

class Migration(migrations.Migration):
    """
    Migration for fill database with info in songs.json file
    """

    dependencies = [
        ('top_songs', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(fill_database, reverse),
    ]
